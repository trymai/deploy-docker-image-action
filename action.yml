name: "Deploy Docker Image"
description: "Deploy Docker Image"
inputs:
  gcp-credentials:
    description: "gcp-credentials"
    required: true
  gcp-cluster-name:
    description: "gcp-cluster-name"
    required: true
  gcp-project-id:
    description: "gcp-project-id"
    required: true
  gcp-cluster-zone:
    description: "europe-central2-a"
    required: true
  gcp-docker-registry:
    description: "gcp-docker-registry"
    required: true
  gcp-docker-repository:
    description: "gcp-docker-repository"
    required: true
  gcp-helm-repository:
    description: "gcp-helm-repository"
    required: true
  helm-charts-path:
    description: "helm-charts-path"
    required: true
    default: "./.k8s/helm"
  service-name:
    description: "service-name"
    required: true
  service-version:
    description: "service-version"
    required: true
runs:
  using: "composite"
  steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.gcp-credentials }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v0

    - name: Get the Google Kubernetes Engine Credentials
      run: gcloud container clusters get-credentials ${{ inputs.gcp-cluster-name }} --zone ${{ inputs.gcp-cluster-zone }}
      shell: bash

    - name: Authenticate Docker with Google Artifact Registry.
      run: cat $GOOGLE_APPLICATION_CREDENTIALS | docker login -u _json_key --password-stdin https://${{ inputs.gcp-docker-registry }}
      shell: bash

    - name: Publish Docker Image
      run: docker push ${{ inputs.gcp-docker-registry }}/${{ inputs.gcp-project-id }}/{{ inputs.gcp-docker-repository }}/${{ inputs.service-name }}:${{ inputs.service-version }}
      shell: bash

    - name: Setup Helm
      uses: azure/setup-helm@v1

    - name: Lint Helm Charts
      run: helm lint --set service.name=${{ inputs.service-name }} --set service.version=${{ inputs.service-version }} ${{ inputs.helm-charts-path }}
      shell: bash

    - name: Publish Helm Charts
      run: |-
        helm package --version=${{ inputs.service-version }} --app-version=${{ inputs.service-version }} ${{ inputs.helm-charts-path }}
        helm push ${{ inputs.service-name }}-${{ inputs.service-version }}.tgz oci://${{ inputs.gcp-docker-registry }}/${{ inputs.gcp-project-id }}/${{ inputs.gcp-helm-repository }}
      shell: bash

    - name: Deploy image to the GKE cluster
      run: helm upgrade --install ${{ inputs.service-name }} oci://${{ inputs.gcp-docker-registry }}/${{ inputs.gcp-project-id }}/${{ inputs.gcp-helm-repository }}/${{ inputs.service-version }} --version ${{ inputs.service-version }} --set service.name=${{ inputs.service-version }} --set service.version=${{ inputs.service-version }}
      shell: bash